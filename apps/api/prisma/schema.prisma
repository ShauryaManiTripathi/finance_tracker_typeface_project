// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum TransactionSource {
  MANUAL
  RECEIPT
  STATEMENT_IMPORT
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  categories   Category[]
  transactions Transaction[]

  @@map("users")
}

model Category {
  id     String       @id @default(cuid())
  name   String
  type   CategoryType
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  // Constraints
  @@unique([userId, name])
  @@map("categories")
}

model Transaction {
  id          String            @id @default(cuid())
  type        TransactionType
  amount      Decimal           @db.Decimal(12, 2)
  currency    String            @default("INR")
  occurredAt  DateTime
  description String?
  merchant    String?
  source      TransactionSource @default(MANUAL)
  receiptUrl  String?
  externalId  String?
  userId      String
  categoryId  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  // Indexes for performance
  @@index([userId, occurredAt])
  @@index([userId, categoryId])
  @@index([userId, type])
  @@index([userId, amount, occurredAt])
  @@map("transactions")
}

// Optional: Import preview table for AI statement processing
model ImportPreview {
  id        String   @id @default(cuid())
  userId    String
  content   Json
  summary   Json
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@map("import_previews")
}